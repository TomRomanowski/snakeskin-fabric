# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from snakeskin.protos.common.common_pb2 import (
    Block as snakeskin___protos___common___common_pb2___Block,
    HeaderType as snakeskin___protos___common___common_pb2___HeaderType,
    Status as snakeskin___protos___common___common_pb2___Status,
)

from snakeskin.protos.peer.chaincode_event_pb2 import (
    ChaincodeEvent as snakeskin___protos___peer___chaincode_event_pb2___ChaincodeEvent,
)

from snakeskin.protos.peer.transaction_pb2 import (
    TxValidationCode as snakeskin___protos___peer___transaction_pb2___TxValidationCode,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class FilteredBlock(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    channel_id = ... # type: typing___Text
    number = ... # type: int

    @property
    def filtered_transactions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[FilteredTransaction]: ...

    def __init__(self,
        *,
        channel_id : typing___Optional[typing___Text] = None,
        number : typing___Optional[int] = None,
        filtered_transactions : typing___Optional[typing___Iterable[FilteredTransaction]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FilteredBlock: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"channel_id",u"filtered_transactions",u"number"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"channel_id",b"channel_id",u"filtered_transactions",b"filtered_transactions",u"number",b"number"]) -> None: ...

class FilteredTransaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    txid = ... # type: typing___Text
    type = ... # type: snakeskin___protos___common___common_pb2___HeaderType
    tx_validation_code = ... # type: snakeskin___protos___peer___transaction_pb2___TxValidationCode

    @property
    def transaction_actions(self) -> FilteredTransactionActions: ...

    def __init__(self,
        *,
        txid : typing___Optional[typing___Text] = None,
        type : typing___Optional[snakeskin___protos___common___common_pb2___HeaderType] = None,
        tx_validation_code : typing___Optional[snakeskin___protos___peer___transaction_pb2___TxValidationCode] = None,
        transaction_actions : typing___Optional[FilteredTransactionActions] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FilteredTransaction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"Data",u"transaction_actions"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Data",u"transaction_actions",u"tx_validation_code",u"txid",u"type"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"Data",b"Data",u"transaction_actions",b"transaction_actions"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Data",b"Data",u"transaction_actions",b"transaction_actions",u"tx_validation_code",b"tx_validation_code",u"txid",b"txid",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"Data",b"Data"]) -> typing_extensions___Literal["transaction_actions"]: ...

class FilteredTransactionActions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def chaincode_actions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[FilteredChaincodeAction]: ...

    def __init__(self,
        *,
        chaincode_actions : typing___Optional[typing___Iterable[FilteredChaincodeAction]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FilteredTransactionActions: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"chaincode_actions"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"chaincode_actions",b"chaincode_actions"]) -> None: ...

class FilteredChaincodeAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def chaincode_event(self) -> snakeskin___protos___peer___chaincode_event_pb2___ChaincodeEvent: ...

    def __init__(self,
        *,
        chaincode_event : typing___Optional[snakeskin___protos___peer___chaincode_event_pb2___ChaincodeEvent] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FilteredChaincodeAction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"chaincode_event"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"chaincode_event"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"chaincode_event",b"chaincode_event"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"chaincode_event",b"chaincode_event"]) -> None: ...

class DeliverResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    status = ... # type: snakeskin___protos___common___common_pb2___Status

    @property
    def block(self) -> snakeskin___protos___common___common_pb2___Block: ...

    @property
    def filtered_block(self) -> FilteredBlock: ...

    def __init__(self,
        *,
        status : typing___Optional[snakeskin___protos___common___common_pb2___Status] = None,
        block : typing___Optional[snakeskin___protos___common___common_pb2___Block] = None,
        filtered_block : typing___Optional[FilteredBlock] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DeliverResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"Type",u"block",u"filtered_block",u"status"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Type",u"block",u"filtered_block",u"status"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"Type",b"Type",u"block",b"block",u"filtered_block",b"filtered_block",u"status",b"status"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Type",b"Type",u"block",b"block",u"filtered_block",b"filtered_block",u"status",b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"Type",b"Type"]) -> typing_extensions___Literal["status","block","filtered_block"]: ...
