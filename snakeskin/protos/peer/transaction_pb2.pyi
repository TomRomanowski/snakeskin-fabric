# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from snakeskin.protos.common.common_pb2 import (
    Envelope as snakeskin___protos___common___common_pb2___Envelope,
)

from snakeskin.protos.peer.proposal_response_pb2 import (
    Endorsement as snakeskin___protos___peer___proposal_response_pb2___Endorsement,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class TxValidationCode(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> TxValidationCode: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[TxValidationCode]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, TxValidationCode]]: ...
    VALID = typing___cast(TxValidationCode, 0)
    NIL_ENVELOPE = typing___cast(TxValidationCode, 1)
    BAD_PAYLOAD = typing___cast(TxValidationCode, 2)
    BAD_COMMON_HEADER = typing___cast(TxValidationCode, 3)
    BAD_CREATOR_SIGNATURE = typing___cast(TxValidationCode, 4)
    INVALID_ENDORSER_TRANSACTION = typing___cast(TxValidationCode, 5)
    INVALID_CONFIG_TRANSACTION = typing___cast(TxValidationCode, 6)
    UNSUPPORTED_TX_PAYLOAD = typing___cast(TxValidationCode, 7)
    BAD_PROPOSAL_TXID = typing___cast(TxValidationCode, 8)
    DUPLICATE_TXID = typing___cast(TxValidationCode, 9)
    ENDORSEMENT_POLICY_FAILURE = typing___cast(TxValidationCode, 10)
    MVCC_READ_CONFLICT = typing___cast(TxValidationCode, 11)
    PHANTOM_READ_CONFLICT = typing___cast(TxValidationCode, 12)
    UNKNOWN_TX_TYPE = typing___cast(TxValidationCode, 13)
    TARGET_CHAIN_NOT_FOUND = typing___cast(TxValidationCode, 14)
    MARSHAL_TX_ERROR = typing___cast(TxValidationCode, 15)
    NIL_TXACTION = typing___cast(TxValidationCode, 16)
    EXPIRED_CHAINCODE = typing___cast(TxValidationCode, 17)
    CHAINCODE_VERSION_CONFLICT = typing___cast(TxValidationCode, 18)
    BAD_HEADER_EXTENSION = typing___cast(TxValidationCode, 19)
    BAD_CHANNEL_HEADER = typing___cast(TxValidationCode, 20)
    BAD_RESPONSE_PAYLOAD = typing___cast(TxValidationCode, 21)
    BAD_RWSET = typing___cast(TxValidationCode, 22)
    ILLEGAL_WRITESET = typing___cast(TxValidationCode, 23)
    INVALID_WRITESET = typing___cast(TxValidationCode, 24)
    NOT_VALIDATED = typing___cast(TxValidationCode, 254)
    INVALID_OTHER_REASON = typing___cast(TxValidationCode, 255)
VALID = typing___cast(TxValidationCode, 0)
NIL_ENVELOPE = typing___cast(TxValidationCode, 1)
BAD_PAYLOAD = typing___cast(TxValidationCode, 2)
BAD_COMMON_HEADER = typing___cast(TxValidationCode, 3)
BAD_CREATOR_SIGNATURE = typing___cast(TxValidationCode, 4)
INVALID_ENDORSER_TRANSACTION = typing___cast(TxValidationCode, 5)
INVALID_CONFIG_TRANSACTION = typing___cast(TxValidationCode, 6)
UNSUPPORTED_TX_PAYLOAD = typing___cast(TxValidationCode, 7)
BAD_PROPOSAL_TXID = typing___cast(TxValidationCode, 8)
DUPLICATE_TXID = typing___cast(TxValidationCode, 9)
ENDORSEMENT_POLICY_FAILURE = typing___cast(TxValidationCode, 10)
MVCC_READ_CONFLICT = typing___cast(TxValidationCode, 11)
PHANTOM_READ_CONFLICT = typing___cast(TxValidationCode, 12)
UNKNOWN_TX_TYPE = typing___cast(TxValidationCode, 13)
TARGET_CHAIN_NOT_FOUND = typing___cast(TxValidationCode, 14)
MARSHAL_TX_ERROR = typing___cast(TxValidationCode, 15)
NIL_TXACTION = typing___cast(TxValidationCode, 16)
EXPIRED_CHAINCODE = typing___cast(TxValidationCode, 17)
CHAINCODE_VERSION_CONFLICT = typing___cast(TxValidationCode, 18)
BAD_HEADER_EXTENSION = typing___cast(TxValidationCode, 19)
BAD_CHANNEL_HEADER = typing___cast(TxValidationCode, 20)
BAD_RESPONSE_PAYLOAD = typing___cast(TxValidationCode, 21)
BAD_RWSET = typing___cast(TxValidationCode, 22)
ILLEGAL_WRITESET = typing___cast(TxValidationCode, 23)
INVALID_WRITESET = typing___cast(TxValidationCode, 24)
NOT_VALIDATED = typing___cast(TxValidationCode, 254)
INVALID_OTHER_REASON = typing___cast(TxValidationCode, 255)

class MetaDataKeys(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> MetaDataKeys: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[MetaDataKeys]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, MetaDataKeys]]: ...
    VALIDATION_PARAMETER = typing___cast(MetaDataKeys, 0)
VALIDATION_PARAMETER = typing___cast(MetaDataKeys, 0)

class SignedTransaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    transaction_bytes = ... # type: bytes
    signature = ... # type: bytes

    def __init__(self,
        *,
        transaction_bytes : typing___Optional[bytes] = None,
        signature : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SignedTransaction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"signature",u"transaction_bytes"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"signature",b"signature",u"transaction_bytes",b"transaction_bytes"]) -> None: ...

class ProcessedTransaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    validationCode = ... # type: int

    @property
    def transactionEnvelope(self) -> snakeskin___protos___common___common_pb2___Envelope: ...

    def __init__(self,
        *,
        transactionEnvelope : typing___Optional[snakeskin___protos___common___common_pb2___Envelope] = None,
        validationCode : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ProcessedTransaction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"transactionEnvelope"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"transactionEnvelope",u"validationCode"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"transactionEnvelope",b"transactionEnvelope"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"transactionEnvelope",b"transactionEnvelope",u"validationCode",b"validationCode"]) -> None: ...

class Transaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def actions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[TransactionAction]: ...

    def __init__(self,
        *,
        actions : typing___Optional[typing___Iterable[TransactionAction]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Transaction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"actions"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"actions",b"actions"]) -> None: ...

class TransactionAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    header = ... # type: bytes
    payload = ... # type: bytes

    def __init__(self,
        *,
        header : typing___Optional[bytes] = None,
        payload : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TransactionAction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"header",u"payload"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"header",b"header",u"payload",b"payload"]) -> None: ...

class ChaincodeActionPayload(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    chaincode_proposal_payload = ... # type: bytes

    @property
    def action(self) -> ChaincodeEndorsedAction: ...

    def __init__(self,
        *,
        chaincode_proposal_payload : typing___Optional[bytes] = None,
        action : typing___Optional[ChaincodeEndorsedAction] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ChaincodeActionPayload: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"action"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"action",u"chaincode_proposal_payload"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"action",b"action"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"chaincode_proposal_payload",b"chaincode_proposal_payload"]) -> None: ...

class ChaincodeEndorsedAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    proposal_response_payload = ... # type: bytes

    @property
    def endorsements(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[snakeskin___protos___peer___proposal_response_pb2___Endorsement]: ...

    def __init__(self,
        *,
        proposal_response_payload : typing___Optional[bytes] = None,
        endorsements : typing___Optional[typing___Iterable[snakeskin___protos___peer___proposal_response_pb2___Endorsement]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ChaincodeEndorsedAction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"endorsements",u"proposal_response_payload"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"endorsements",b"endorsements",u"proposal_response_payload",b"proposal_response_payload"]) -> None: ...
