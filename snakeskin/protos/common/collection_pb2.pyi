# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from snakeskin.protos.common.policies_pb2 import (
    SignaturePolicyEnvelope as snakeskin___protos___common___policies_pb2___SignaturePolicyEnvelope,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class CollectionConfigPackage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def config(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[CollectionConfig]: ...

    def __init__(self,
        *,
        config : typing___Optional[typing___Iterable[CollectionConfig]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CollectionConfigPackage: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"config"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"config",b"config"]) -> None: ...

class CollectionConfig(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def static_collection_config(self) -> StaticCollectionConfig: ...

    def __init__(self,
        *,
        static_collection_config : typing___Optional[StaticCollectionConfig] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CollectionConfig: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"payload",u"static_collection_config"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"payload",u"static_collection_config"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"payload",b"payload",u"static_collection_config",b"static_collection_config"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"payload",b"payload",u"static_collection_config",b"static_collection_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"payload",b"payload"]) -> typing_extensions___Literal["static_collection_config"]: ...

class StaticCollectionConfig(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name = ... # type: typing___Text
    required_peer_count = ... # type: int
    maximum_peer_count = ... # type: int
    block_to_live = ... # type: int
    member_only_read = ... # type: bool

    @property
    def member_orgs_policy(self) -> CollectionPolicyConfig: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        member_orgs_policy : typing___Optional[CollectionPolicyConfig] = None,
        required_peer_count : typing___Optional[int] = None,
        maximum_peer_count : typing___Optional[int] = None,
        block_to_live : typing___Optional[int] = None,
        member_only_read : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> StaticCollectionConfig: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"member_orgs_policy"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"block_to_live",u"maximum_peer_count",u"member_only_read",u"member_orgs_policy",u"name",u"required_peer_count"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"member_orgs_policy",b"member_orgs_policy"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"block_to_live",b"block_to_live",u"maximum_peer_count",b"maximum_peer_count",u"member_only_read",b"member_only_read",u"member_orgs_policy",b"member_orgs_policy",u"name",b"name",u"required_peer_count",b"required_peer_count"]) -> None: ...

class CollectionPolicyConfig(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def signature_policy(self) -> snakeskin___protos___common___policies_pb2___SignaturePolicyEnvelope: ...

    def __init__(self,
        *,
        signature_policy : typing___Optional[snakeskin___protos___common___policies_pb2___SignaturePolicyEnvelope] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CollectionPolicyConfig: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"payload",u"signature_policy"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"payload",u"signature_policy"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"payload",b"payload",u"signature_policy",b"signature_policy"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"payload",b"payload",u"signature_policy",b"signature_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"payload",b"payload"]) -> typing_extensions___Literal["signature_policy"]: ...

class CollectionCriteria(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    channel = ... # type: typing___Text
    tx_id = ... # type: typing___Text
    collection = ... # type: typing___Text
    namespace = ... # type: typing___Text

    def __init__(self,
        *,
        channel : typing___Optional[typing___Text] = None,
        tx_id : typing___Optional[typing___Text] = None,
        collection : typing___Optional[typing___Text] = None,
        namespace : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CollectionCriteria: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"channel",u"collection",u"namespace",u"tx_id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"channel",b"channel",u"collection",b"collection",u"namespace",b"namespace",u"tx_id",b"tx_id"]) -> None: ...
