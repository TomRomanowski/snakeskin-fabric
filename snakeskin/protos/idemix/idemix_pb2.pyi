# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ECP(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    x = ... # type: bytes
    y = ... # type: bytes

    def __init__(self,
        *,
        x : typing___Optional[bytes] = None,
        y : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ECP: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"x",u"y"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"x",b"x",u"y",b"y"]) -> None: ...

class ECP2(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    xa = ... # type: bytes
    xb = ... # type: bytes
    ya = ... # type: bytes
    yb = ... # type: bytes

    def __init__(self,
        *,
        xa : typing___Optional[bytes] = None,
        xb : typing___Optional[bytes] = None,
        ya : typing___Optional[bytes] = None,
        yb : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ECP2: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"xa",u"xb",u"ya",u"yb"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"xa",b"xa",u"xb",b"xb",u"ya",b"ya",u"yb",b"yb"]) -> None: ...

class IssuerPublicKey(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    attribute_names = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    proof_c = ... # type: bytes
    proof_s = ... # type: bytes
    hash = ... # type: bytes

    @property
    def h_sk(self) -> ECP: ...

    @property
    def h_rand(self) -> ECP: ...

    @property
    def h_attrs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ECP]: ...

    @property
    def w(self) -> ECP2: ...

    @property
    def bar_g1(self) -> ECP: ...

    @property
    def bar_g2(self) -> ECP: ...

    def __init__(self,
        *,
        attribute_names : typing___Optional[typing___Iterable[typing___Text]] = None,
        h_sk : typing___Optional[ECP] = None,
        h_rand : typing___Optional[ECP] = None,
        h_attrs : typing___Optional[typing___Iterable[ECP]] = None,
        w : typing___Optional[ECP2] = None,
        bar_g1 : typing___Optional[ECP] = None,
        bar_g2 : typing___Optional[ECP] = None,
        proof_c : typing___Optional[bytes] = None,
        proof_s : typing___Optional[bytes] = None,
        hash : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> IssuerPublicKey: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"bar_g1",u"bar_g2",u"h_rand",u"h_sk",u"w"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"attribute_names",u"bar_g1",u"bar_g2",u"h_attrs",u"h_rand",u"h_sk",u"hash",u"proof_c",u"proof_s",u"w"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"bar_g1",b"bar_g1",u"bar_g2",b"bar_g2",u"h_rand",b"h_rand",u"h_sk",b"h_sk",u"w",b"w"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"attribute_names",b"attribute_names",u"bar_g1",b"bar_g1",u"bar_g2",b"bar_g2",u"h_attrs",b"h_attrs",u"h_rand",b"h_rand",u"h_sk",b"h_sk",u"hash",b"hash",u"proof_c",b"proof_c",u"proof_s",b"proof_s",u"w",b"w"]) -> None: ...

class IssuerKey(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    isk = ... # type: bytes

    @property
    def ipk(self) -> IssuerPublicKey: ...

    def __init__(self,
        *,
        isk : typing___Optional[bytes] = None,
        ipk : typing___Optional[IssuerPublicKey] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> IssuerKey: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"ipk"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ipk",u"isk"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"ipk",b"ipk"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ipk",b"ipk",u"isk",b"isk"]) -> None: ...

class Credential(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    e = ... # type: bytes
    s = ... # type: bytes
    attrs = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bytes]

    @property
    def a(self) -> ECP: ...

    @property
    def b(self) -> ECP: ...

    def __init__(self,
        *,
        a : typing___Optional[ECP] = None,
        b : typing___Optional[ECP] = None,
        e : typing___Optional[bytes] = None,
        s : typing___Optional[bytes] = None,
        attrs : typing___Optional[typing___Iterable[bytes]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Credential: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"a",u"b"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"a",u"attrs",u"b",u"e",u"s"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"a",b"a",u"b",b"b"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"a",b"a",u"attrs",b"attrs",u"b",b"b",u"e",b"e",u"s",b"s"]) -> None: ...

class CredRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    issuer_nonce = ... # type: bytes
    proof_c = ... # type: bytes
    proof_s = ... # type: bytes

    @property
    def nym(self) -> ECP: ...

    def __init__(self,
        *,
        nym : typing___Optional[ECP] = None,
        issuer_nonce : typing___Optional[bytes] = None,
        proof_c : typing___Optional[bytes] = None,
        proof_s : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CredRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"nym"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"issuer_nonce",u"nym",u"proof_c",u"proof_s"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"nym",b"nym"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"issuer_nonce",b"issuer_nonce",u"nym",b"nym",u"proof_c",b"proof_c",u"proof_s",b"proof_s"]) -> None: ...

class Signature(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    proof_c = ... # type: bytes
    proof_s_sk = ... # type: bytes
    proof_s_e = ... # type: bytes
    proof_s_r2 = ... # type: bytes
    proof_s_r3 = ... # type: bytes
    proof_s_s_prime = ... # type: bytes
    proof_s_attrs = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bytes]
    nonce = ... # type: bytes
    proof_s_r_nym = ... # type: bytes
    revocation_pk_sig = ... # type: bytes
    epoch = ... # type: int

    @property
    def a_prime(self) -> ECP: ...

    @property
    def a_bar(self) -> ECP: ...

    @property
    def b_prime(self) -> ECP: ...

    @property
    def nym(self) -> ECP: ...

    @property
    def revocation_epoch_pk(self) -> ECP2: ...

    @property
    def non_revocation_proof(self) -> NonRevocationProof: ...

    def __init__(self,
        *,
        a_prime : typing___Optional[ECP] = None,
        a_bar : typing___Optional[ECP] = None,
        b_prime : typing___Optional[ECP] = None,
        proof_c : typing___Optional[bytes] = None,
        proof_s_sk : typing___Optional[bytes] = None,
        proof_s_e : typing___Optional[bytes] = None,
        proof_s_r2 : typing___Optional[bytes] = None,
        proof_s_r3 : typing___Optional[bytes] = None,
        proof_s_s_prime : typing___Optional[bytes] = None,
        proof_s_attrs : typing___Optional[typing___Iterable[bytes]] = None,
        nonce : typing___Optional[bytes] = None,
        nym : typing___Optional[ECP] = None,
        proof_s_r_nym : typing___Optional[bytes] = None,
        revocation_epoch_pk : typing___Optional[ECP2] = None,
        revocation_pk_sig : typing___Optional[bytes] = None,
        epoch : typing___Optional[int] = None,
        non_revocation_proof : typing___Optional[NonRevocationProof] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Signature: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"a_bar",u"a_prime",u"b_prime",u"non_revocation_proof",u"nym",u"revocation_epoch_pk"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"a_bar",u"a_prime",u"b_prime",u"epoch",u"non_revocation_proof",u"nonce",u"nym",u"proof_c",u"proof_s_attrs",u"proof_s_e",u"proof_s_r2",u"proof_s_r3",u"proof_s_r_nym",u"proof_s_s_prime",u"proof_s_sk",u"revocation_epoch_pk",u"revocation_pk_sig"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"a_bar",b"a_bar",u"a_prime",b"a_prime",u"b_prime",b"b_prime",u"non_revocation_proof",b"non_revocation_proof",u"nym",b"nym",u"revocation_epoch_pk",b"revocation_epoch_pk"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"a_bar",b"a_bar",u"a_prime",b"a_prime",u"b_prime",b"b_prime",u"epoch",b"epoch",u"non_revocation_proof",b"non_revocation_proof",u"nonce",b"nonce",u"nym",b"nym",u"proof_c",b"proof_c",u"proof_s_attrs",b"proof_s_attrs",u"proof_s_e",b"proof_s_e",u"proof_s_r2",b"proof_s_r2",u"proof_s_r3",b"proof_s_r3",u"proof_s_r_nym",b"proof_s_r_nym",u"proof_s_s_prime",b"proof_s_s_prime",u"proof_s_sk",b"proof_s_sk",u"revocation_epoch_pk",b"revocation_epoch_pk",u"revocation_pk_sig",b"revocation_pk_sig"]) -> None: ...

class NonRevocationProof(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    revocation_alg = ... # type: int
    non_revocation_proof = ... # type: bytes

    def __init__(self,
        *,
        revocation_alg : typing___Optional[int] = None,
        non_revocation_proof : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> NonRevocationProof: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"non_revocation_proof",u"revocation_alg"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"non_revocation_proof",b"non_revocation_proof",u"revocation_alg",b"revocation_alg"]) -> None: ...

class NymSignature(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    proof_c = ... # type: bytes
    proof_s_sk = ... # type: bytes
    proof_s_r_nym = ... # type: bytes
    nonce = ... # type: bytes

    def __init__(self,
        *,
        proof_c : typing___Optional[bytes] = None,
        proof_s_sk : typing___Optional[bytes] = None,
        proof_s_r_nym : typing___Optional[bytes] = None,
        nonce : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> NymSignature: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"nonce",u"proof_c",u"proof_s_r_nym",u"proof_s_sk"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"nonce",b"nonce",u"proof_c",b"proof_c",u"proof_s_r_nym",b"proof_s_r_nym",u"proof_s_sk",b"proof_s_sk"]) -> None: ...

class CredentialRevocationInformation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    epoch = ... # type: int
    epoch_pk_sig = ... # type: bytes
    revocation_alg = ... # type: int
    revocation_data = ... # type: bytes

    @property
    def epoch_pk(self) -> ECP2: ...

    def __init__(self,
        *,
        epoch : typing___Optional[int] = None,
        epoch_pk : typing___Optional[ECP2] = None,
        epoch_pk_sig : typing___Optional[bytes] = None,
        revocation_alg : typing___Optional[int] = None,
        revocation_data : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CredentialRevocationInformation: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"epoch_pk"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"epoch",u"epoch_pk",u"epoch_pk_sig",u"revocation_alg",u"revocation_data"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"epoch_pk",b"epoch_pk"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"epoch",b"epoch",u"epoch_pk",b"epoch_pk",u"epoch_pk_sig",b"epoch_pk_sig",u"revocation_alg",b"revocation_alg",u"revocation_data",b"revocation_data"]) -> None: ...
