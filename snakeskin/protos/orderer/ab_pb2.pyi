# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from snakeskin.protos.common.common_pb2 import (
    Block as snakeskin___protos___common___common_pb2___Block,
    Status as snakeskin___protos___common___common_pb2___Status,
)

from typing import (
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class BroadcastResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    status = ... # type: snakeskin___protos___common___common_pb2___Status
    info = ... # type: typing___Text

    def __init__(self,
        *,
        status : typing___Optional[snakeskin___protos___common___common_pb2___Status] = None,
        info : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BroadcastResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"info",u"status"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"info",b"info",u"status",b"status"]) -> None: ...

class SeekNewest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SeekNewest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class SeekOldest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SeekOldest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class SeekSpecified(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    number = ... # type: int

    def __init__(self,
        *,
        number : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SeekSpecified: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"number"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"number",b"number"]) -> None: ...

class SeekPosition(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def newest(self) -> SeekNewest: ...

    @property
    def oldest(self) -> SeekOldest: ...

    @property
    def specified(self) -> SeekSpecified: ...

    def __init__(self,
        *,
        newest : typing___Optional[SeekNewest] = None,
        oldest : typing___Optional[SeekOldest] = None,
        specified : typing___Optional[SeekSpecified] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SeekPosition: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"Type",u"newest",u"oldest",u"specified"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Type",u"newest",u"oldest",u"specified"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"Type",b"Type",u"newest",b"newest",u"oldest",b"oldest",u"specified",b"specified"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Type",b"Type",u"newest",b"newest",u"oldest",b"oldest",u"specified",b"specified"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"Type",b"Type"]) -> typing_extensions___Literal["newest","oldest","specified"]: ...

class SeekInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class SeekBehavior(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> SeekInfo.SeekBehavior: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[SeekInfo.SeekBehavior]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, SeekInfo.SeekBehavior]]: ...
        BLOCK_UNTIL_READY = typing___cast(SeekInfo.SeekBehavior, 0)
        FAIL_IF_NOT_READY = typing___cast(SeekInfo.SeekBehavior, 1)
    BLOCK_UNTIL_READY = typing___cast(SeekInfo.SeekBehavior, 0)
    FAIL_IF_NOT_READY = typing___cast(SeekInfo.SeekBehavior, 1)

    behavior = ... # type: SeekInfo.SeekBehavior

    @property
    def start(self) -> SeekPosition: ...

    @property
    def stop(self) -> SeekPosition: ...

    def __init__(self,
        *,
        start : typing___Optional[SeekPosition] = None,
        stop : typing___Optional[SeekPosition] = None,
        behavior : typing___Optional[SeekInfo.SeekBehavior] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SeekInfo: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"start",u"stop"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"behavior",u"start",u"stop"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"start",b"start",u"stop",b"stop"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"behavior",b"behavior",u"start",b"start",u"stop",b"stop"]) -> None: ...

class DeliverResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    status = ... # type: snakeskin___protos___common___common_pb2___Status

    @property
    def block(self) -> snakeskin___protos___common___common_pb2___Block: ...

    def __init__(self,
        *,
        status : typing___Optional[snakeskin___protos___common___common_pb2___Status] = None,
        block : typing___Optional[snakeskin___protos___common___common_pb2___Block] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DeliverResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"Type",u"block",u"status"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Type",u"block",u"status"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"Type",b"Type",u"block",b"block",u"status",b"status"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Type",b"Type",u"block",b"block",u"status",b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"Type",b"Type"]) -> typing_extensions___Literal["status","block"]: ...
