# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class TokenTransaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def plain_action(self) -> PlainTokenAction: ...

    def __init__(self,
        *,
        plain_action : typing___Optional[PlainTokenAction] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TokenTransaction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"action",u"plain_action"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"action",u"plain_action"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"action",b"action",u"plain_action",b"plain_action"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"plain_action",b"plain_action"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"action",b"action"]) -> typing_extensions___Literal["plain_action"]: ...

class PlainTokenAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def plain_import(self) -> PlainImport: ...

    @property
    def plain_transfer(self) -> PlainTransfer: ...

    @property
    def plain_redeem(self) -> PlainTransfer: ...

    @property
    def plain_approve(self) -> PlainApprove: ...

    @property
    def plain_transfer_From(self) -> PlainTransferFrom: ...

    def __init__(self,
        *,
        plain_import : typing___Optional[PlainImport] = None,
        plain_transfer : typing___Optional[PlainTransfer] = None,
        plain_redeem : typing___Optional[PlainTransfer] = None,
        plain_approve : typing___Optional[PlainApprove] = None,
        plain_transfer_From : typing___Optional[PlainTransferFrom] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PlainTokenAction: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data",u"plain_approve",u"plain_import",u"plain_redeem",u"plain_transfer",u"plain_transfer_From"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",u"plain_approve",u"plain_import",u"plain_redeem",u"plain_transfer",u"plain_transfer_From"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data",u"plain_approve",b"plain_approve",u"plain_import",b"plain_import",u"plain_redeem",b"plain_redeem",u"plain_transfer",b"plain_transfer",u"plain_transfer_From",b"plain_transfer_From"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"plain_approve",b"plain_approve",u"plain_import",b"plain_import",u"plain_redeem",b"plain_redeem",u"plain_transfer",b"plain_transfer",u"plain_transfer_From",b"plain_transfer_From"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"data",b"data"]) -> typing_extensions___Literal["plain_import","plain_transfer","plain_redeem","plain_approve","plain_transfer_From"]: ...

class PlainImport(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def outputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[PlainOutput]: ...

    def __init__(self,
        *,
        outputs : typing___Optional[typing___Iterable[PlainOutput]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PlainImport: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"outputs"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"outputs",b"outputs"]) -> None: ...

class PlainTransfer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def inputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[InputId]: ...

    @property
    def outputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[PlainOutput]: ...

    def __init__(self,
        *,
        inputs : typing___Optional[typing___Iterable[InputId]] = None,
        outputs : typing___Optional[typing___Iterable[PlainOutput]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PlainTransfer: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"inputs",u"outputs"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"inputs",b"inputs",u"outputs",b"outputs"]) -> None: ...

class PlainApprove(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def inputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[InputId]: ...

    @property
    def delegated_outputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[PlainDelegatedOutput]: ...

    @property
    def output(self) -> PlainOutput: ...

    def __init__(self,
        *,
        inputs : typing___Optional[typing___Iterable[InputId]] = None,
        delegated_outputs : typing___Optional[typing___Iterable[PlainDelegatedOutput]] = None,
        output : typing___Optional[PlainOutput] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PlainApprove: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"output"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"delegated_outputs",u"inputs",u"output"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"output",b"output"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"delegated_outputs",b"delegated_outputs",u"inputs",b"inputs",u"output",b"output"]) -> None: ...

class PlainTransferFrom(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def inputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[InputId]: ...

    @property
    def outputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[PlainOutput]: ...

    @property
    def delegated_output(self) -> PlainDelegatedOutput: ...

    def __init__(self,
        *,
        inputs : typing___Optional[typing___Iterable[InputId]] = None,
        outputs : typing___Optional[typing___Iterable[PlainOutput]] = None,
        delegated_output : typing___Optional[PlainDelegatedOutput] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PlainTransferFrom: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"delegated_output"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"delegated_output",u"inputs",u"outputs"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"delegated_output",b"delegated_output"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"delegated_output",b"delegated_output",u"inputs",b"inputs",u"outputs",b"outputs"]) -> None: ...

class PlainOutput(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    owner = ... # type: bytes
    type = ... # type: typing___Text
    quantity = ... # type: int

    def __init__(self,
        *,
        owner : typing___Optional[bytes] = None,
        type : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PlainOutput: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"owner",u"quantity",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"owner",b"owner",u"quantity",b"quantity",u"type",b"type"]) -> None: ...

class InputId(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    tx_id = ... # type: typing___Text
    index = ... # type: int

    def __init__(self,
        *,
        tx_id : typing___Optional[typing___Text] = None,
        index : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> InputId: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"index",u"tx_id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"index",b"index",u"tx_id",b"tx_id"]) -> None: ...

class PlainDelegatedOutput(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    owner = ... # type: bytes
    delegatees = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bytes]
    type = ... # type: typing___Text
    quantity = ... # type: int

    def __init__(self,
        *,
        owner : typing___Optional[bytes] = None,
        delegatees : typing___Optional[typing___Iterable[bytes]] = None,
        type : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PlainDelegatedOutput: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"delegatees",u"owner",u"quantity",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"delegatees",b"delegatees",u"owner",b"owner",u"quantity",b"quantity",u"type",b"type"]) -> None: ...
